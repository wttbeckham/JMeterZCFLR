<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="filePath" elementType="Argument">
            <stringProp name="Argument.name">filePath</stringProp>
            <stringProp name="Argument.value">${__P(filePath,D:\wtt\JMeterZCFLR)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">C:\apache-jmeter-4.0\lib\mysql-connector-java-5.1.39-bin.jar</stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ip" elementType="Argument">
            <stringProp name="Argument.name">ip</stringProp>
            <stringProp name="Argument.value">192.168.100.124</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8301</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">wtt first</stringProp>
            <stringProp name="Argument.desc">一级账号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">wtt123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="assetName" elementType="Argument">
            <stringProp name="Argument.name">assetName</stringProp>
            <stringProp name="Argument.value">API直租&amp;回租&amp;库融${__Random(1,999,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="assetType" elementType="Argument">
            <stringProp name="Argument.name">assetType</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">1-直租&amp;回租&amp;库融,2-类信用卡,3-租房分期,4-现金&amp;商品分期</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="attachment" elementType="Argument">
            <stringProp name="Argument.name">attachment</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">1-标准附件,2-非标准附件</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auditRemark" elementType="Argument">
            <stringProp name="Argument.name">auditRemark</stringProp>
            <stringProp name="Argument.value">同意</stringProp>
            <stringProp name="Argument.desc">审批意见</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="successCode" elementType="Argument">
            <stringProp name="Argument.name">successCode</stringProp>
            <stringProp name="Argument.value">2000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="successMsg" elementType="Argument">
            <stringProp name="Argument.name">successMsg</stringProp>
            <stringProp name="Argument.value">success</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="timer" elementType="Argument">
            <stringProp name="Argument.name">timer</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="assetId123" elementType="Argument">
            <stringProp name="Argument.name">assetId123</stringProp>
            <stringProp name="Argument.value">ZC0146</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">trade.jindanlicai.com</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.proxyHost">${ip}</stringProp>
        <stringProp name="HTTPSampler.proxyPort">${port}</stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <stringProp name="CookieManager.policy">default</stringProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="资产方录入平台" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(cycles,1)}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(threadNum,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampUp,1)}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;:&quot;${username}&quot;,&#xd;
	&quot;password&quot;:&quot;${password}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="867820612">${successCode}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-248798584">${successMsg}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建资产方" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;asset_name&quot;:&quot;${assetName}&quot;,&#xd;
	&quot;asset_type&quot;:&quot;${assetType}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/assets_create</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="867820612">${successCode}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-248798584">${successMsg}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">assetId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;asset_id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询资产方${assetId}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/assets/${assetId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">FileWriter fwriter = new FileWriter(&quot;D:\\wtt\\JMeterZCFLR\\assetId.txt&quot;,true);
BufferedWriter bwriter = new BufferedWriter(fwriter);
bwriter.write(vars.get(&quot;assetId&quot;)+&quot;\n&quot;);
bwriter.close();
fwriter.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="867820612">${successCode}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2131342455">${assetId}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="企业概况" enabled="true"/>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="企业基本情况" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId11})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">企业基本情况.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title11,assetId11,assetName11,productKeyword,financingBodyType,offerType,loanSection,paymentMethod,periods,periodsUnit,productType,purchasePrice,guarantyStyle11,operateKey11,requestType11</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId11})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title11}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;asset_id&quot;:&quot;${__eval(${assetId11})}&quot;,&#xd;
	&quot;asset_name&quot;:&quot;${__eval(${assetName11})}&quot;,&#xd;
	&quot;product_keyword&quot;:&quot;${productKeyword}&quot;,&#xd;
	&quot;financing_body_type&quot;:&quot;${financingBodyType}&quot;,&#xd;
	&quot;offer_type&quot;:&quot;${offerType}&quot;,&#xd;
	&quot;loan_section&quot;:&quot;${loanSection}&quot;,&#xd;
	&quot;payment_method&quot;:&quot;${paymentMethod}&quot;,	&#xd;
	&quot;procurement_cost&quot;:[&#xd;
	  {&#xd;
		&quot;periods&quot;:&quot;${periods}&quot;,&#xd;
		&quot;periods_unit&quot;:${periodsUnit},&#xd;
		&quot;product_type&quot;:&quot;${productType}&quot;,&#xd;
		&quot;purchase_price&quot;:&quot;${purchasePrice}&quot;,&#xd;
		&quot;asset_id&quot;:&quot;${__eval(${assetId11})}&quot;&#xd;
	  }&#xd;
	],&#xd;
	&quot;guaranty_style&quot;:&quot;${guarantyStyle11}&quot;,&#xd;
	&quot;operate_key&quot; : &quot;${operateKey11}&quot;,&#xd;
     &quot;request_type&quot;:&quot;${requestType11}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${timer}</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="尽调信息" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId12})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">尽调信息.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title12,assetId12,diligenceLocation,diligenceTime,relatedPersonnel,dataSupport,operateKey12,requestType12</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId12})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title12}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId12})}&quot;,&#xd;
    &quot;diligence_location&quot;: &quot;${diligenceLocation}&quot;,&#xd;
    &quot;diligence_time&quot;: &quot;${diligenceTime}&quot;,&#xd;
    &quot;related_personnel&quot;: &quot;${relatedPersonnel}&quot;,&#xd;
    &quot;data_support&quot;: &quot;${dataSupport}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey12}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType12}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${timer}</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="商务部初审意见" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId13})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">商务部初审意见.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title13,assetId13,supervisionRequirement,supervisionRemark,permitStandard,permitRemark,approachesCooperation,creditDeadline,planList,cooperativePurpose,creditMoney,level,operateKey13,requestType13</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId13})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title13}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId13})}&quot;,&#xd;
    &quot;supervision_requirement&quot;: ${supervisionRequirement},&#xd;
    &quot;supervision_requirement_remark&quot;: &quot;${supervisionRemark}&quot;,&#xd;
    &quot;permit_standard&quot;: ${permitStandard},&#xd;
    &quot;permit_standard_remark&quot;: &quot;${permitRemark}&quot;,&#xd;
    &quot;approaches_to_cooperation&quot;: &quot;${approachesCooperation}&quot;,&#xd;
    &quot;credit_extension_deadline&quot;: &quot;${creditDeadline}&quot;,&#xd;
    &quot;plan_list&quot;: &quot;${planList}&quot;,&#xd;
    &quot;cooperative_purpose&quot;: &quot;${cooperativePurpose}&quot;,    &#xd;
    &quot;credit_money&quot;: &quot;${creditMoney}&quot;,&#xd;
    &quot;level&quot;: ${level},    &#xd;
    &quot;operate_key&quot;: &quot;${operateKey13}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType13}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${timer}</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="组织信息" enabled="true"/>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="企业工商信息" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId211})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">企业工商信息.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title211,assetId211,companyName,companyType,licenseNumber,legalPerson,cardNumber,buildTime,businessTime,registerAddress,companyAddress,businessScope,companyBusinessInfo,registeredAssets,contributedCapital,shareholderInfo,operateKey211,requestType211</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId211})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title211}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId211})}&quot;,&#xd;
    &quot;company_name&quot;: &quot;${companyName}&quot;,&#xd;
    &quot;company_type&quot;: &quot;${companyType}&quot;,&#xd;
    &quot;license_number&quot;: &quot;${licenseNumber}&quot;,&#xd;
    &quot;legal_person&quot;: &quot;${legalPerson}&quot;,&#xd;
    &quot;legal_person_card_number&quot;: &quot;${cardNumber}&quot;,&#xd;
    &quot;build_time&quot;: &quot;${buildTime}&quot;,&#xd;
    &quot;business_time&quot;: &quot;${businessTime}&quot;,&#xd;
    &quot;register_address&quot;: &quot;${registerAddress}&quot;,&#xd;
    &quot;company_address&quot;: &quot;${companyAddress}&quot;,&#xd;
    &quot;business_scope&quot;: &quot;${businessScope}&quot;,&#xd;
    &quot;company_business_info&quot;: &quot;${companyBusinessInfo}&quot;,&#xd;
    &quot;registered_assets&quot;: ${registeredAssets},&#xd;
    &quot;contributed_capital&quot;: ${contributedCapital},  &#xd;
    &quot;shareholder_info&quot;: &quot;${shareholderInfo}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey211}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType211}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="企业工商信息非标准附件" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId212})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">企业工商信息非标准附件.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title212,assetId212,description212,uploadKey212,uploadName212,uploadUrl212,operateKey212,requestType212</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId212})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title212}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId212})}&quot;,&#xd;
    &quot;description&quot;: &quot;${description212}&quot;,&#xd;
    &quot;upload_key&quot;: &quot;${uploadKey212}&quot;,&#xd;
    &quot;upload_name&quot;: &quot;${uploadName212}&quot;,&#xd;
    &quot;upload_url&quot;: &quot;${uploadUrl212}&quot;,&#xd;
    &quot;operate_key&quot;:&quot;${operateKey212}&quot;,&#xd;
    &quot;request_type&quot;:&quot;${requestType212}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="标准附件" enabled="true">
            <stringProp name="IfController.condition">&quot;${attachment}&quot;==&quot;1&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="对外担保情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId221})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">对外担保情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title221,assetId221,recognizor,securedParty,guaranteedAmount,guaranteedStartDate,guaranteedEndDate,operateKey221,requestType221</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId221})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title221}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId221})}&quot;,&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;recognizor&quot;: &quot;${recognizor}&quot;,&#xd;
            &quot;secured_party&quot;: &quot;${securedParty}&quot;,&#xd;
            &quot;guaranteed_amount&quot;: &quot;${guaranteedAmount}&quot;,&#xd;
            &quot;guaranteed_start_date&quot;: &quot;${guaranteedStartDate}&quot;,&#xd;
            &quot;guaranteed_end_date&quot;: &quot;${guaranteedEndDate}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;table_header&quot;: &quot;[\&quot;担保方\&quot;,\&quot;被担保方\&quot;,\&quot;担保金额\&quot;,\&quot;担保起始日\&quot;,\&quot;担保到期日\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey221}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType221}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="对外负债情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId231})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">对外负债情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title231,assetId231,financingInstitution,financingType,money231,financingCost,loanDate,dueDate,repaymentDate,guarantyStyle231,operateKey231,requestType231</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId231})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title231}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId231})}&quot;,&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;financing_institution&quot;: &quot;${financingInstitution}&quot;,&#xd;
            &quot;financing_institution_type&quot;:&quot;${financingType}&quot;,&#xd;
            &quot;money&quot;:&quot;${money231}&quot;,&#xd;
            &quot;financing_cost&quot;:&quot;${financingCost}&quot;,&#xd;
            &quot;loan_date&quot;:&quot;${loanDate}&quot;,&#xd;
            &quot;due_date&quot;:&quot;${dueDate}&quot;,&#xd;
            &quot;repayment_date&quot;:&quot;${repaymentDate}&quot;,&#xd;
            &quot;guaranty_style&quot;:&quot;${guarantyStyle231}&quot;&#xd;
        }&#xd;
    ],    &#xd;
    &quot;table_header&quot;: &quot;[\&quot;金融机构\&quot;,\&quot;品种\&quot;,\&quot;金额\&quot;,\&quot;融资成本\&quot;,\&quot;放款日\&quot;,\&quot;到期日\&quot;,\&quot;实际偿还日\&quot;,\&quot;担保方式\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey231}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType231}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="人法、仲裁、失信情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId241})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">人法、仲裁、失信情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title241,assetId241,auditNumber,nature,status,money241,reason,operateKey241,requestType241</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId241})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title241}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId241})}&quot;,&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;audit_number&quot;: &quot;${auditNumber}&quot;,&#xd;
            &quot;nature&quot;: &quot;${nature}&quot;,&#xd;
            &quot;status&quot;: &quot;${status}&quot;,&#xd;
            &quot;money&quot;:&quot;${money241}&quot;,&#xd;
            &quot;reason&quot;:&quot;${reason}&quot;&#xd;
        }&#xd;
    ],    &#xd;
    &quot;table_header&quot;: &quot;[\&quot;公告号\&quot;,\&quot;性质\&quot;,\&quot;状态\&quot;,\&quot;金额\&quot;,\&quot;原因\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey241}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType241}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="股东情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId251})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">股东情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title251,assetId251,shareholderName,shareholderType,shareholderCard,subscribedCapital,capital,shareholdingRatio,updateTime,operateKey251,requestType251</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId251})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title251}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId251})}&quot;,&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;shareholder_name&quot;: &quot;${shareholderName}&quot;,&#xd;
            &quot;shareholder_type&quot;: &quot;${shareholderType}&quot;,&#xd;
            &quot;shareholder_card_no&quot;: &quot;${shareholderCard}&quot;,&#xd;
            &quot;subscribed_capital&quot;: &quot;${subscribedCapital}&quot;,&#xd;
            &quot;capital&quot;: &quot;${capital}&quot;,&#xd;
            &quot;shareholding_ratio&quot;: &quot;${shareholdingRatio}&quot;,&#xd;
            &quot;update_time&quot;: &quot;${updateTime}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;operate_key&quot;: &quot;${operateKey251}&quot;,&#xd;
    &quot;table_header&quot;: &quot;[\&quot;股东名称\&quot;,\&quot;股东类型\&quot;,\&quot;证照/证件号码\&quot;,\&quot;认缴出资\&quot;,\&quot;实缴出资\&quot;,\&quot;持股比例\&quot;,\&quot;更新时间\&quot;]&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType251}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="融资情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId271})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">融资情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title271,assetId271,financingTime,financingStage,financingAmount,accountAmount,investor,financingConditions,financingMode,shareholdingRatio,preinvestmentValuation,valuationMethod,operateKey271,requestType271</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId271})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title271}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;financing_time&quot;: &quot;${financingTime}&quot;,&#xd;
            &quot;financing_stage&quot;: &quot;${financingStage}&quot;,&#xd;
            &quot;financing_amount&quot;: &quot;${financingAmount}&quot;,&#xd;
            &quot;account_amount&quot;: &quot;${accountAmount}&quot;,&#xd;
            &quot;investor&quot;: &quot;${investor}&quot;,&#xd;
            &quot;financing_conditions&quot;: &quot;${financingConditions}&quot;,&#xd;
            &quot;financing_mode&quot;: &quot;${financingMode}&quot;,&#xd;
            &quot;shareholding_ratio&quot;: &quot;${shareholdingRatio}&quot;,&#xd;
            &quot;pre_investment_valuation&quot;: &quot;${preinvestmentValuation}&quot;,&#xd;
            &quot;valuation_method&quot;: &quot;${valuationMethod}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;table_header&quot;: &quot;[\&quot;融资时间\&quot;,\&quot;融资阶段\&quot;,\&quot;融资金额\&quot;,\&quot;到账金额\&quot;,\&quot;投资人\&quot;,\&quot;融资方式\&quot;,\&quot;融资条件\&quot;,\&quot;持股比例\&quot;,\&quot;投前估值\&quot;,\&quot;估值计算方式\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey271}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType271}&quot;,&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId271})}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="关联公司" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId281})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">关联公司标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title281,assetId281,corporateName,relationship,mainBusiness,operateKey281,requestType281</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId281})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title281}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;corporate_name&quot;: &quot;${corporateName}&quot;,&#xd;
            &quot;relationship&quot;: &quot;${relationship}&quot;,&#xd;
            &quot;main_business&quot;: &quot;${mainBusiness}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;table_header&quot;: &quot;[\&quot;公司名称\&quot;,\&quot;与项目关系\&quot;,\&quot;主营业务\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey281}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType281}&quot;,&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId281})}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="公司组织架构" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId291})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">公司组织架构标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title291,assetId291,departmentName,responsiblePerson,personNum,mainResponsibilities,countTime291,changeData,operateKey291,requestType291</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId291})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title291}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;department_name&quot;: &quot;${departmentName}&quot;,&#xd;
            &quot;responsible_person&quot;: &quot;${responsiblePerson}&quot;,&#xd;
            &quot;person_num&quot;: ${personNum},&#xd;
            &quot;main_responsibilities&quot;: &quot;${mainResponsibilities}&quot;,&#xd;
            &quot;count_time&quot;: &quot;${countTime291}&quot;,&#xd;
            &quot;change_data&quot;: ${changeData}&#xd;
        }&#xd;
    ],&#xd;
    &quot;table_header&quot;: &quot;[\&quot;部门名称\&quot;,\&quot;负责人\&quot;,\&quot;部门人数\&quot;,\&quot;主要职责\&quot;,\&quot;统计时间\&quot;,\&quot;同比变动数据较去年统计同期人数的变化数\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey291}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType291}&quot;,&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId291})}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="主要部门负责人及简介" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId2101})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">主要部门负责人及简介标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title2101,assetId2101,post,name,entryTime,introduce,countTime2101,operateKey2101,requestType2101</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId2101})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title2101}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;post&quot;: &quot;${post}&quot;,&#xd;
            &quot;name&quot;: &quot;${name}&quot;,&#xd;
            &quot;entry_time&quot;: &quot;${entryTime}&quot;,&#xd;
            &quot;introduce&quot;: &quot;${introduce}&quot;,&#xd;
            &quot;count_time&quot;: &quot;${countTime2101}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;table_header&quot;: &quot;[\&quot;职务\&quot;,\&quot;姓名\&quot;,\&quot;入职时间\&quot;,\&quot;介绍\&quot;,\&quot;统计时间\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey2101}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType2101}&quot;,&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId2101})}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="外部资金方情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId2111})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">外部资金方情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title2111,assetId2111,serialNumber,capitalName,creditTime,creditLine,creditTerm,costCapital,marginLevel,tillNow,balance,threeMonth,twoMonth,oneMonth,paymentMethod,settleMethod,operateKey2111,requestType2111</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId2111})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title2111}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;serial_number&quot;: ${serialNumber},&#xd;
            &quot;capital_name&quot;: &quot;${capitalName}&quot;,&#xd;
            &quot;credit_time&quot;: &quot;${creditTime}&quot;,&#xd;
            &quot;credit_line&quot;: &quot;${creditLine}&quot;,&#xd;
            &quot;credit_term&quot;: &quot;${creditTerm}&quot;,&#xd;
            &quot;cost_of_capital&quot;: &quot;${costCapital}&quot;,&#xd;
            &quot;margin_level&quot;: &quot;${marginLevel}&quot;,&#xd;
            &quot;loan_money_till_now&quot;: &quot;${tillNow}&quot;,&#xd;
            &quot;loan_money_balance&quot;: &quot;${balance}&quot;,&#xd;
            &quot;loan_status_three_month&quot;: &quot;${threeMonth}&quot;,&#xd;
            &quot;loan_status_two_month&quot;: &quot;${twoMonth}&quot;,&#xd;
            &quot;loan_status_one_month&quot;: &quot;${oneMonth}&quot;,&#xd;
            &quot;payment_method&quot;: &quot;${paymentMethod}&quot;,&#xd;
            &quot;settle_method&quot;: &quot;${settleMethod}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;table_header&quot;: &quot;[\&quot;编号\&quot;,\&quot;资金方名称\&quot;,\&quot;授信时间\&quot;,\&quot;授信额度\&quot;,\&quot;授信期限\&quot;,\&quot;资金成本\&quot;,\&quot;保证金比例\&quot;,\&quot;截至当前放款金额\&quot;,\&quot;当前在贷余额\&quot;,\&quot;最近三月放款状况（T1）\&quot;,\&quot;最近二月放款状况（T2）\&quot;,\&quot;最近一月放款状况（T3）\&quot;,\&quot;放款收款方式\&quot;,\&quot;结算方式\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey2111}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType2111}&quot;,&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId2111})}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="实际控制人及持股比例" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId261})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">实际控制人及持股比例.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title261,assetId261,shareholdingRatio,manger,operateKey261,requestType261</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId261})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title261}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;shareholding_ratio&quot;: &quot;${shareholdingRatio}&quot;,&#xd;
            &quot;manger&quot;: &quot;${manger}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;operate_key&quot;: &quot;${operateKey261}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType261}&quot;,&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId261})}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非标准附件" enabled="true">
            <stringProp name="IfController.condition">&quot;${attachment}&quot;==&quot;2&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId02})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">组织信息非标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title02,assetId02,uploadName02,description02,URL02,storedUrl02,operateKey02,requestType02</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId02})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title02}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId02})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName02}&quot;,&#xd;
    &quot;description&quot;: &quot;${description02}&quot;,&#xd;
    &quot;${URL02}&quot;:&quot;${storedUrl02}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey02}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType02}&quot;   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="外部资金方情况Top5资金方协议非标准附件" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId2112})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">Top5资金方协议非标准附件.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title2112,assetId2112,description2112,uploadKey2112,uploadName2112,uploadUrl2112,key2112,operateKey2112,requestType2112</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId2112})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title2112}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId2112})}&quot;,&#xd;
    &quot;description&quot;: &quot;${description2112}&quot;,&#xd;
    &quot;upload_key&quot;: &quot;${uploadKey2112}&quot;,&#xd;
    &quot;upload_name&quot;: &quot;${uploadName2112}&quot;,&#xd;
    &quot;upload_url&quot;: &quot;${uploadUrl2112}&quot;,&#xd;
    &quot;key&quot;:&quot;${key2112}&quot;,&#xd;
    &quot;operate_key&quot;:&quot;${operateKey2112}&quot;,&#xd;
    &quot;request_type&quot;:&quot;${requestType2112}&quot;    &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="理财部门信息" enabled="true"/>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="理财部门整体介绍非标准附件" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId312})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">理财部门整体介绍非标准附件.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title312,assetId312,uploadName312,description312,uploadKey312,uploadUrl312,operateKey312,requestType312</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId312})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title312}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId312})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName312}&quot;,&#xd;
    &quot;description&quot;: &quot;${description312}&quot;,&#xd;
    &quot;upload_key&quot;:&quot;${uploadKey312}&quot;,&#xd;
    &quot;upload_url&quot;:&quot;${uploadUrl312}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey312}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType312}&quot;   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="标准附件" enabled="true">
            <stringProp name="IfController.condition">&quot;${attachment}&quot;==&quot;1&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="公司募资余额产品结构情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId321})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">公司募资余额产品结构情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title321,assetId321,isOnline321,resource,serialNum321,channelName321,productTerm321,annualRate321,principalBalance,collectionAmount,operateKey321,requestType321</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId321})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title321}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId321})}&quot;,&#xd;
    &quot;is_online&quot;:&quot;${isOnline321}&quot;,&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;resource&quot;: &quot;${resource}&quot;,&#xd;
            &quot;serial_num&quot;: &quot;${serialNum321}&quot;,&#xd;
            &quot;channel_name&quot;: &quot;${channelName321}&quot;,&#xd;
            &quot;product_term&quot;: &quot;${productTerm321}&quot;,&#xd;
            &quot;annual_rate&quot;:&quot;${annualRate321}&quot;,&#xd;
            &quot;principal_balance&quot;:&quot;${principalBalance}&quot;,&#xd;
            &quot;collection_amount&quot;:&quot;${collectionAmount}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;table_header&quot;: &quot;[\&quot;来源\&quot;,\&quot;序号\&quot;,\&quot;产品或外部融资渠道名称\&quot;,\&quot;产品期限\&quot;,\&quot;年化收益率\&quot;,\&quot;截止上月未兑付本金余额\&quot;,\&quot;截止上月累计募集金额\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey321}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType321}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="公司各月募资情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId331})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">公司各月募资情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title331,assetId331,isOnline331,data331,operateKey331,requestType331</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId331})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title331}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;:&quot;${__eval(${assetId331})}&quot;,   &#xd;
    &quot;is_online&quot;:&quot;${isOnline331}&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;0&quot;: [&#xd;
            [&#xd;
                &quot;来源&quot;,&#xd;
                &quot;序号&quot;,&#xd;
                &quot;产品或外部融资渠道名称&quot;,&#xd;
                &quot;2016年1月募集资金总额&quot;,&#xd;
                &quot;2016年2月募集资金总额&quot;,&#xd;
                &quot;2016年3月募集资金总额&quot;,&#xd;
                &quot;2016年4月募集资金总额&quot;,&#xd;
                &quot;2016年5月募集资金总额&quot;,&#xd;
                &quot;2016年6月募集资金总额&quot;,&#xd;
                &quot;2016年7月募集资金总额&quot;,&#xd;
                &quot;2016年8月募集资金总额&quot;,&#xd;
                &quot;2016年9月募集资金总额&quot;,&#xd;
                &quot;2016年10月募集资金总额&quot;,&#xd;
                &quot;2016年11月募集资金总额&quot;,&#xd;
                &quot;2016年12月募集资金总额&quot;&#xd;
            ],&#xd;
            [&#xd;
                ${data331}&#xd;
            ]&#xd;
        ]&#xd;
    },&#xd;
    &quot;operate_key&quot;: &quot;${operateKey331}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType331}&quot;,&#xd;
    &quot;upload_url&quot; :null,&#xd;
    &quot;upload_name&quot; :null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="外部融资渠道最近一年的融资台账" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId341})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">外部融资渠道最近一年的融资台账标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title341,assetId341,serialNum341,channelName341,productTerm341,valueDate,ceaseDate,financingAmount,interestAmount,annualRate341,operateKey341,requestType341</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId341})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title341}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId341})}&quot;,&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;serial_num&quot;: &quot;${serialNum341}&quot;,&#xd;
            &quot;channel_name&quot;: &quot;${channelName341}&quot;,&#xd;
            &quot;product_term&quot;: &quot;${productTerm341}&quot;,&#xd;
            &quot;value_date&quot;:&quot;${valueDate}&quot;,&#xd;
            &quot;cease_date&quot;:&quot;${ceaseDate}&quot;,&#xd;
            &quot;financing_amount&quot;:&quot;${financingAmount}&quot;,&#xd;
            &quot;interest_amount&quot;:&quot;${interestAmount}&quot;,&#xd;
            &quot;annual_rate&quot;: &quot;${annualRate341}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;table_header&quot;: &quot;[\&quot;序号\&quot;,\&quot;外部融资渠道名称\&quot;,\&quot;产品期限\&quot;,\&quot;起息日\&quot;,\&quot;止息日\&quot;,\&quot;融资金额\&quot;,\&quot;利息金额\&quot;,\&quot;年化利率\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey341}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType341}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非标准附件" enabled="true">
            <stringProp name="IfController.condition">&quot;${attachment}&quot;==&quot;2&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="公司募资余额产品结构情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId322})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">公司募资余额产品结构情况非标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title322,assetId322,isOnline322,uploadName322,description322,URL322,storedUrl322,operateKey322,requestType322</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId322})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title322}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId322})}&quot;,&#xd;
    &quot;is_online&quot;:&quot;${isOnline322}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName322}&quot;,&#xd;
    &quot;description&quot;: &quot;${description322}&quot;,&#xd;
    &quot;${URL322}&quot;:&quot;${storedUrl322}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey322}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType322}&quot;   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="公司各月募资情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId332})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">公司各月募资情况非标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title332,assetId332,isOnline332,uploadName332,uploadUrl332,operateKey332,requestType332</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId332})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title332}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;:&quot;${__eval(${assetId332})}&quot;,&#xd;
    &quot;is_online&quot;:&quot;${isOnline332}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName332}&quot;,&#xd;
    &quot;upload_url&quot;:&quot;${uploadUrl332}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey332}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType332}&quot;   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="外部融资渠道最近一年的融资台账" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId342})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">外部融资渠道最近一年的融资台账非标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title342,assetId342,uploadName342,description342,URL342,storedUrl342,operateKey342,requestType342</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId342})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title342}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId342})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName342}&quot;,&#xd;
    &quot;description&quot;: &quot;${description342}&quot;,&#xd;
    &quot;${URL342}&quot;:&quot;${storedUrl342}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey342}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType342}&quot;   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="业务信息" enabled="true"/>
        <hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="标准附件" enabled="true">
            <stringProp name="IfController.condition">&quot;${attachment}&quot;==&quot;1&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="公司自成立开始账龄数据情况" enabled="false">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId421})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">业务地域分布情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title431,assetId431,data431,operateKey431,requestType431</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId421})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title421}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;:&quot;${__eval(${assetId421})}&quot;,   &#xd;
    &quot;data&quot;: {&#xd;
        &quot;0&quot;: [&#xd;
            [&#xd;
                &quot;序号&quot;,&quot;合作渠道&quot;,&quot;地区（省或市）&quot;,&quot;201701业务量放款总额&quot;,&quot;201701车损量放款总额&quot;,&quot;201702业务量放款总额&quot;,&quot;201702车损量放款总额&quot;,&quot;201703业务量放款总额&quot;,&quot;201703车损量放款总额&quot;,&quot;201704业务量放款总额&quot;,&quot;201704车损量放款总额&quot;,&quot;201705业务量放款总额&quot;,&quot;201705车损量放款总额&quot;,&quot;201706业务量放款总额&quot;,&quot;201706车损量放款总额&quot;&#xd;
            ],&#xd;
            [&#xd;
                ${data421}&#xd;
            ]&#xd;
        ]&#xd;
    },&#xd;
    &quot;operate_key&quot;: &quot;${operateKey421}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType421}&quot;,&#xd;
    &quot;upload_url&quot; :null,&#xd;
    &quot;upload_name&quot; :null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="业务地域分布情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId431})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">业务地域分布情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title431,assetId431,data431,operateKey431,requestType431</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId431})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title431}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;:&quot;${__eval(${assetId431})}&quot;,   &#xd;
    &quot;data&quot;: {&#xd;
        &quot;0&quot;: [&#xd;
            [&#xd;
                &quot;序号&quot;,&quot;合作渠道&quot;,&quot;地区（省或市）&quot;,&quot;201701业务量放款总额&quot;,&quot;201701车损量放款总额&quot;,&quot;201702业务量放款总额&quot;,&quot;201702车损量放款总额&quot;,&quot;201703业务量放款总额&quot;,&quot;201703车损量放款总额&quot;,&quot;201704业务量放款总额&quot;,&quot;201704车损量放款总额&quot;,&quot;201705业务量放款总额&quot;,&quot;201705车损量放款总额&quot;,&quot;201706业务量放款总额&quot;,&quot;201706车损量放款总额&quot;&#xd;
            ],&#xd;
            [&#xd;
                ${data431}&#xd;
            ]&#xd;
        ]&#xd;
    },&#xd;
    &quot;operate_key&quot;: &quot;${operateKey431}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType431}&quot;,&#xd;
    &quot;upload_url&quot; :null,&#xd;
    &quot;upload_name&quot; :null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="业务门店分布情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId441})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">业务门店分布情况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title441,assetId441,data441,operateKey441,requestType441</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId441})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title441}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;:&quot;${__eval(${assetId441})}&quot;,   &#xd;
    &quot;data&quot;: {&#xd;
        &quot;0&quot;: [&#xd;
            [&#xd;
                &quot;序号&quot;,&quot;门店&quot;,&quot;201701放款总额&quot;,&quot;201702放款总额&quot;,&quot;201703放款总额&quot;,&quot;201704放款总额&quot;,&quot;201705放款总额&quot;,&quot;201706放款总额&quot;,&quot;201707放款总额&quot;,&quot;201708放款总额&quot;,&quot;201709放款总额&quot;&#xd;
            ],&#xd;
            [&#xd;
                ${data441}&#xd;
            ]&#xd;
        ]&#xd;
    },&#xd;
    &quot;operate_key&quot;: &quot;${operateKey441}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType441}&quot;,&#xd;
    &quot;upload_url&quot; :null,&#xd;
    &quot;upload_name&quot; :null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="业务总量概况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId451})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">业务总量概况标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title451,assetId451,,productName,onlineTime,loansTotal,loansCurrent,customerGroup,gainWay,productLine,productDownline,loanTerm,paymentWay,monthlyAmount,operateKey451,requestType451</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId451})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title451}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId451})}&quot;,&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;product_name&quot;: &quot;${productName}&quot;,&#xd;
            &quot;online_time&quot;: &quot;${onlineTime}&quot;,&#xd;
            &quot;loans_amount_total&quot;: &quot;${loansTotal}&quot;,&#xd;
            &quot;loans_amount_current&quot;:&quot;${loansCurrent}&quot;,&#xd;
            &quot;customer_group&quot;:&quot;${customerGroup}&quot;,&#xd;
            &quot;gain_customer_way&quot;:&quot;${gainWay}&quot;,&#xd;
            &quot;product_credit_line&quot;:&quot;${productLine}&quot;,&#xd;
            &quot;product_credit_downline&quot;: &quot;${productDownline}&quot;,&#xd;
            &quot;loan_term&quot;: &quot;${loanTerm}&quot;,&#xd;
            &quot;payment_way&quot;: &quot;${paymentWay}&quot;,&#xd;
            &quot;monthly_load_amount&quot;: &quot;${monthlyAmount}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;table_header&quot;: &quot;[\&quot;产品名称\&quot;,\&quot;上线时间\&quot;,\&quot;总放款金额\&quot;,\&quot;当前在贷余额\&quot;,\&quot;客群\&quot;,\&quot;获客方式\&quot;,\&quot;产品授信上限\&quot;,\&quot;产品授信下限\&quot;,\&quot;借款期限\&quot;,\&quot;还款方式\&quot;,\&quot;近1年平均月放款量\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey451}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType451}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非标准附件" enabled="true">
            <stringProp name="IfController.condition">&quot;${attachment}&quot;==&quot;2&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="最近两年各月份业务数据" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId412})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">最近两年各月份业务数据非标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title412,assetId412,uploadName412,uploadUrl412,tableType412,operateKey412,requestType412</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId412})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title412}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId412})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName412}&quot;,&#xd;
    &quot;upload_url&quot;:&quot;${uploadUrl412}&quot;,&#xd;
    &quot;table_type&quot;: &quot;${tableType412}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey412}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType412}&quot;   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="公司自成立开始账龄数据情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId422})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">公司自成立开始账龄数据情况非标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title422,assetId422,uploadName422,uploadUrl422,tableType422,operateKey422,requestType422</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId422})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title422}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId422})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName422}&quot;,&#xd;
    &quot;upload_url&quot;:&quot;${uploadUrl422}&quot;,&#xd;
    &quot;table_type&quot;: &quot;${tableType422}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey422}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType422}&quot;   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">String assetType = vars.get(&quot;assetType&quot;);
String tableType422 = vars.get(&quot;tableType422&quot;);

 
if(assetType.equals(&quot;2&quot;)){
	vars.put(&quot;${tableType422}&quot;,&quot;${__CSVRead(D:\\wtt\\资产方录入\\公司自成立开始账龄数据情况非标准附件.txt,5)}&quot;);
	}</stringProp>
                  </BeanShellPreProcessor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="业务地域分布情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId432})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">业务地域分布情况非标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title432,assetId432,uploadName432,uploadUrl432,operateKey432,requestType432</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId432})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title432}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId432})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName432}&quot;,&#xd;
    &quot;upload_url&quot;:&quot;${uploadUrl432}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey432}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType432}&quot;   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="业务门店分布情况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId442})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">业务门店分布情况非标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title442,assetId442,uploadName442,uploadUrl442,operateKey442,requestType442</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId442})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title442}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId442})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName442}&quot;,&#xd;
    &quot;upload_url&quot;:&quot;${uploadUrl442}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey442}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType442}&quot;   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="业务总量概况" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId452})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">业务总量概况非标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title452,assetId452,uploadName452,description452,URL452,storedUrl452,operateKey452,requestType452</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId452})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title452}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId452})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName452}&quot;,&#xd;
    &quot;description&quot;: &quot;${description452}&quot;,&#xd;
    &quot;${URL452}&quot;:&quot;${storedUrl452}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey452}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType452}&quot;   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="只有非标准附件" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId462})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">业务信息只有非标准附件.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title462,assetId462,uploadName462,description462,uploadKey462,uploadUrl462,operateKey462,requestType462</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId462})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title462}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId462})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName462}&quot;,&#xd;
    &quot;description&quot;: &quot;${description462}&quot;,&#xd;
    &quot;upload_key&quot;:&quot;${uploadKey462}&quot;,&#xd;
    &quot;upload_url&quot;:&quot;${uploadUrl462}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey462}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType462}&quot;   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="风控部门资料" enabled="true"/>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="非标准附件" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId512})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">风控部门资料非标准附件.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title512,assetId512,uploadName512,description512,uploadKey512,uploadUrl512,operateKey512,requestType512</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId512})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title512}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId512})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName512}&quot;,&#xd;
    &quot;description&quot;: &quot;${description512}&quot;,&#xd;
    &quot;upload_key&quot;:&quot;${uploadKey512}&quot;,&#xd;
    &quot;upload_url&quot;:&quot;${uploadUrl512}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey512}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType512}&quot;   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="财务信息" enabled="true"/>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="只有非标准附件" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId612})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">财务信息只有非标准附件.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title612,assetId612,uploadName612,description612,uploadKey612,uploadUrl612,operateKey612,requestType612</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId612})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title612}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId612})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName612}&quot;,&#xd;
    &quot;description&quot;: &quot;${description612}&quot;,&#xd;
    &quot;upload_key&quot;:&quot;${uploadKey612}&quot;,&#xd;
    &quot;upload_url&quot;:&quot;${uploadUrl612}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey612}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType612}&quot;   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="标准附件" enabled="true">
            <stringProp name="IfController.condition">&quot;${attachment}&quot;==&quot;1&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="近一年有息负债融资清单及相应的协议" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId621})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">近一年有息负债融资清单及相应的协议标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title621,assetId621,financialInstitution,financialProducts,amount,financingCost,lendersDay,dueDay,paybackDay,guaranteeMethod,operateKey621,requestType621</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId621})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title621}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId621})}&quot;,&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;financial_institution&quot;: &quot;${financialInstitution}&quot;,&#xd;
            &quot;financial_products&quot;:&quot;${financialProducts}&quot;,&#xd;
            &quot;amount&quot;:&quot;${amount}&quot;,&#xd;
            &quot;financing_cost&quot;:&quot;${financingCost}&quot;,&#xd;
            &quot;lenders_day&quot;:&quot;${lendersDay}&quot;,&#xd;
            &quot;due_day&quot;:&quot;${dueDay}&quot;,&#xd;
            &quot;actual_payback_day&quot;:&quot;${paybackDay}&quot;,&#xd;
            &quot;guarantee_method&quot;:&quot;${guaranteeMethod}&quot;&#xd;
        }&#xd;
    ],    &#xd;
    &quot;table_header&quot;: &quot;[\&quot;金融机构\&quot;,\&quot;品种\&quot;,\&quot;金额\&quot;,\&quot;融资成本\&quot;,\&quot;放款日\&quot;,\&quot;到期日\&quot;,\&quot;实际偿还日\&quot;,\&quot;担保方式\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey621}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType621}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="最近一期公司银行、第三方支付账户列表与余额并提供相应的银行账单" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId631})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">最近一期公司银行、第三方支付账户列表与余额并提供相应的银行对账单标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title631,assetId631,serialNum,organName,payAccount,currentBalance,accountFunction,accountType,operateKey631,requestType631</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId631})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title631}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId631})}&quot;,&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;serial_num&quot;: &quot;${serialNum}&quot;,&#xd;
            &quot;organ_name&quot;: &quot;${organName}&quot;,&#xd;
            &quot;pay_account&quot;: &quot;${payAccount}&quot;,&#xd;
            &quot;current_balance&quot;:&quot;${currentBalance}&quot;,&#xd;
            &quot;account_function&quot;:&quot;${accountFunction}&quot;,&#xd;
            &quot;account_type&quot;: &quot;${accountType}&quot;&#xd;
        }&#xd;
    ],    &#xd;
    &quot;table_header&quot;: &quot;[\&quot;序号\&quot;,\&quot;银行名称/第三方支付名称\&quot;,\&quot;银行/第三方支付账户\&quot;,\&quot;截至资料提供日余额\&quot;,\&quot;该银行账户/第三方支付账户功能\&quot;,\&quot;账户类型\&quot;]&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey631}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType631}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非标准附件" enabled="true">
            <stringProp name="IfController.condition">&quot;${attachment}&quot;==&quot;2&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="财务信息非标准附件" enabled="true">
              <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId06})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">财务信息非标准附件.txt</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">title06,assetId06,uploadName06,description06,URL06,storedUrl06,operateKey06,requestType06</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">;</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">&quot;${__eval(${assetId06})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title06}" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId06})}&quot;,&#xd;
    &quot;upload_name&quot;:&quot;${uploadName06}&quot;,&#xd;
    &quot;description&quot;: &quot;${description06}&quot;,&#xd;
    &quot;${URL06}&quot;:&quot;${storedUrl06}&quot;,&#xd;
    &quot;operate_key&quot;: &quot;${operateKey06}&quot;,&#xd;
    &quot;request_type&quot;: &quot;${requestType06}&quot;   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/assets_create_save</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="867820612">${successCode}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-248798584">${successMsg}</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="确认完成" enabled="true"/>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="确认完成" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId21})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">确认完成.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title21,assetId21,operateKey21,event21,uploadKey21</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId21})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title21}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;:&quot;${__eval(${assetId21})}&quot;,   &#xd;
    &quot;operate_key&quot;: &quot;${operateKey21}&quot;,&#xd;
    &quot;event&quot;: &quot;${event21}&quot;,&#xd;
    &quot;asset_type&quot; :&quot;${assetType}&quot;,&#xd;
    &quot;upload_key&quot;:&quot;${uploadKey21}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_status_change</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="确认完成线上线下" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId22})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">确认完成线上线下.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">title22,assetId22,operateKey22,event22,isOnline22,uploadKey22</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">;</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">false</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">&quot;${__eval(${assetId22})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${title22}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;:&quot;${__eval(${assetId22})}&quot;,   &#xd;
    &quot;operate_key&quot;: &quot;${operateKey22}&quot;,&#xd;
    &quot;event&quot;: &quot;${event22}&quot;,&#xd;
    &quot;asset_type&quot; :&quot;${assetType}&quot;,&#xd;
    &quot;is_online&quot;:&quot;${isOnline22}&quot;,&#xd;
    &quot;upload_key&quot;:&quot;${uploadKey22}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/assets_status_change</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="867820612">${successCode}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-248798584">${successMsg}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="状态显示" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/assets_status/${assetId}/list</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="867820612">${successCode}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-248798584">${successMsg}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交审批" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;asset_id&quot;:&quot;${assetId}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/assets_to_examine</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="867820612">${successCode}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-248798584">${successMsg}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="提交风控" enabled="true">
          <stringProp name="WhileController.condition">${__jexl2(&quot;${__eval(${assetId3})}&quot;!=&quot;&lt;EOF&gt;&quot;)}</stringProp>
        </WhileController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">商务部初审意见提交风控.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">title3,assetId3,supervisionRequirement3,supervisionRemark3,permitStandard3,permitRemark3,approachesCooperation3,creditDeadline3,planList3,cooperativePurpose3,creditMoney3,level3,operateKey13,requestType13</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">;</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${__eval(${assetId3})}&quot;!=&quot;&lt;EOF&gt;&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交风控" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;asset_id&quot;: &quot;${__eval(${assetId3})}&quot;,&#xd;
    &quot;supervision_requirement&quot;: ${supervisionRequirement3},&#xd;
    &quot;supervision_requirement_remark&quot;: &quot;${supervisionRemark3}&quot;,&#xd;
    &quot;permit_standard&quot;: ${permitStandard3},&#xd;
    &quot;permit_standard_remark&quot;: &quot;${permitRemark3}&quot;,&#xd;
    &quot;approaches_to_cooperation&quot;: &quot;${approachesCooperation3}&quot;,&#xd;
    &quot;credit_extension_deadline&quot;: &quot;${creditDeadline3}&quot;,&#xd;
    &quot;plan_list&quot;: &quot;${planList3}&quot;,&#xd;
    &quot;cooperative_purpose&quot;: &quot;${cooperativePurpose3}&quot;,    &#xd;
    &quot;credit_money&quot;: &quot;${creditMoney3}&quot;,&#xd;
    &quot;level&quot;: ${level3},    &#xd;
    &quot;audit_remark&quot;:&quot;${auditRemark}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/assets_to_audit</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response code Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="867820612">${successCode}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response message Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-248798584">${successMsg}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">${filePath}\result.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
